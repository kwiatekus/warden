name: "Promote to channel with config"

on:
  workflow_dispatch:
    inputs:
      warden_tag:
        description: 'Warden tag (`x.x.x`)'
        default: ""
        required: true
      warden_skr_config_tag:
        description: 'Warden SKR config tag (`y.y`)'
        default: ""
        required: true
      channel:
        description: 'Module channel'
        default: "fast"
        required: true

env:
  MODULE_VERSION: ${{ github.event.inputs.warden_tag }}-${{ github.event.inputs.warden_skr_config_tag }}
  WARDEN_VERSION: ${{ github.event.inputs.warden_tag }}
  CHANNEL: ${{ github.event.inputs.channel }}
  # needed by gh cli for GitHub enterprise
  GH_ENTERPRISE_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
  BOT_USERNAME: kyma-otter-serviceuser
  BOT_EMAIL: dl_545734d8fd84a02c39000002@global.corp.sap

jobs:
  promote-warden:
    name: Render warden with skr config
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download warden-SKR-config
        run: |
          gh release download ${{ github.event.inputs.warden_skr_config_tag }} -R https://github.tools.sap/kyma/warden-skr-config/ --pattern '*.yaml' --output values.yaml
      
      - name: Render warden manifest for values
        run: |
          make render-manifest-for-values
          echo "==== warden manifest ==="
          cat warden.yaml
          
      - name: Render module-config
        run: |
          make module-config
          echo "==== module-config ==="
          cat module-config.yaml 

      - name: Set up module-manifests repo
        run: |
          git config --global user.email "${BOT_EMAIL}"
          git config --global user.name "${BOT_USERNAME}"
          git clone "https://${BOT_USERNAME}:${GH_ENTERPRISE_TOKEN}@github.tools.sap/${BOT_USERNAME}/module-manifests.git"
          git -C module-manifests remote add upstream "https://${BOT_USERNAME}:${GH_ENTERPRISE_TOKEN}@github.tools.sap/kyma/module-manifests.git"

      - name: Commit manifest
        working-directory: module-manifests
        run: |
          git fetch upstream
          git checkout -B "${MODULE_VERSION}-${CHANNEL}" upstream/main

          mkdir -p modules/warden/${CHANNEL}
          cp ../warden.yaml modules/warden/${CHANNEL}/warden.yaml
          cp ../module-config.yaml modules/warden/${CHANNEL}/module-config.yaml

          git add .
          git commit -m "promote warden ${MODULE_VERSION} to ${CHANNEL} channel"
          git push origin "${MODULE_VERSION}-${CHANNEL}" -f

      - name: Create PullRequest to module-manifests
        working-directory: module-manifests
        run: |
          prs=$(gh pr list -R "https://github.tools.sap/kyma/module-manifests" -A "${BOT_USERNAME}" --state open --json headRefName)

          if  echo $prs | jq -e ".[] | select(.headRefName==\"${MODULE_VERSION}-${CHANNEL}\")"; then
              echo "opened PR already exists, no need to create new one, PR will be updated by push from previous step"
              exit 0
          fi

          gh pr create -B main --fill \
            -H "${BOT_USERNAME}:${MODULE_VERSION}-${CHANNEL}" \
            -R https://github.tools.sap/kyma/module-manifests/ \
            --title "Promote Warden ${MODULE_VERSION} to ${CHANNEL} channel" \
            --body "https://github.tools.sap/kyma/warden-skr-config/actions/runs/${{github.run_id}}"
